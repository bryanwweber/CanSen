# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

jobs:

- job: 'Test'
  pool:
    vmImage: 'Ubuntu 16.04'
  strategy:
    matrix:
      Python36:
        python.version: '3.6'
      Python37:
        python.version: '3.7'
    maxParallel: 4

  steps:
  # - task: UsePythonVersion@0
  #   inputs:
  #     versionSpec: '$(python.version)'
  #     architecture: 'x64'
  # Conda Environment
  # Create and activate a Conda environment.
  - task: CondaEnvironment@1
    inputs:
      #createCustomEnvironment: # Optional
      environmentName: base # Required when createCustomEnvironment == True
      packageSpecs: 'python=$(python.version) pytest pytest-datadir cantera'
      #updateConda: true # Optional
      installOptions: '-c cantera -c conda-forge' # Optional
      #createOptions: # Optional
      #cleanEnvironment: # Optional
  - script: |
      pip install --user pytest-azurepipelines
      pip install --user .
    displayName: 'Install dependencies'

  - script: |
      python -m pytest tests/
    displayName: 'pytest'

  # - task: PublishTestResults@2
  #   inputs:
  #     testResultsFiles: '**/test-results.xml'
  #     testRunTitle: 'Python $(python.version)'
  #   condition: succeededOrFailed()

# - job: 'Publish'
#   dependsOn: 'Test'
#   pool:
#     vmImage: 'Ubuntu 16.04'

#   steps:
#   - task: UsePythonVersion@0
#     inputs:
#       versionSpec: '3.x'
#       architecture: 'x64'

#   - script: python setup.py sdist
#     displayName: 'Build sdist'
